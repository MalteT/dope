#!/usr/bin/zsh

# This is an awesome configuration file.
# The ---$0--- is used to expand environment variables and custom substitutions.
# These substitutions are defined in the `./preprocessor.toml`.
# If the escaped string is mentioned in the preprocessor.toml configuration file,
# a simple replacement will be used. I.e. for RED: ---RED---.
# If no such substitution is defined the string will be expanded. The user may:
# - expand variables:
#   $HOME: ---$HOME---
# - execute a programm in a shell:
#   $(pwd): ---$(pwd)---
#
# The base configuration file was written by ---FULL_NAME--- and
# this file was automatically generated on "---$(date +%x)---" ---SMILEY---

# The line prefix, here `#~` needs to be defined in the preprocessor.toml configuration.
# All lines startign with the prefix are interpreted and need to be valid commands.
# Examples usages of the commands can be found in the following lines.

# Comments can be used in files that normally would no support comments
# and always start with a `#`.
# The following line will be removed from the output. Note that the line will
# remain in the output file, if `remove_instructions` is set to false.
#~ # This is a comment command!

# Simple environment variable checks can be done using IFDEF/IFNDEF
# Everything after IFDEF/IFNDEF is expanded. If the expanded value contains
# more than just whitespaces (' ', '\t') it's considered to be true.
#~ IFDEF $XDG_CONFIG_HOME
# XDG_CONFIG_HOME is already defined somewhere.
# XDG_CONFIG_HOME = $HOME/.config
#~ ELSE
# Let's define XDG_CONFIG_HOME:
XDG_CONFIG_HOME = $HOME/.config
#~ ENDIF

# The else branch is optional and can be skipped.
#~ IFNDEF $THE_ANSWER
# The answer is already found! Let's define it here:
ANSWER = 42
#~ ENDIF

# More complex branching can be done using `IF var1 == var2`.
# Like when using the above, var1 and var2 will be expanded before comparison.
# The two are then considered equal, if they contain the same symbols. Starting
# and trailing whitespaces are ignored.
#~ IF $USER == the_devil
# The devil should be disguised, even on his own system
USER = angel
#~ ELSE
# Not the devil.. puh..
#~ ENDIF

# If decision cannot be derived from the environment, ASK can be used to
# query the user during preprocessing. If ASK is followed by at least one OPTION
# name, the user can select one of these options.
#~ ASK Please choose an organisation to join:
#~ OPTION Judean People's Front
ORG = "Judean People's Front"
#~ OPTION People's Front of Judea
ORG = "People's Front of Judea"
#~ ENDASK

# If ASK is not followed by an OPTION, the user has the choice to include
# or skip all lines in between ASK and ENDASK.
#~ ASK Remove all folders from PATH?
# He was stupid enough to anser yes...
PATH = ""
#~ ENDASK

# The commands can be nested inside of each other, but it is not recommended.
# It should work flawlessly but the commands are evaluated inside out.
# So nesting an ASK inside another ASK will result in possibly asking the user
# an unnecessary question.
#~  IFNDEF $my_XDG_CONFIG_HOME
#~      IFNDEF $my_HOME
my_HOME = /home/---$USER---
#~      ENDIF
my_XDG_CONFIG_HOME = $my_HOME/.config
#~  ENDIF
